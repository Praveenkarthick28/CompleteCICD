pipeline {
    agent any
    stages {
        stage('Checkout code') {
            steps {
                echo 'Passed' // Placeholder for actual checkout logic
                // git branch 'main' url 'https://github.com/Praveenkarthick28/CompleteCICD.git'
            }
        }
        stage('Build and Test') {
              steps {
              sh 'ls -ltr'
               // build the project and create a JAR file
               sh 'cd spring-boot-app && mvn clean package'
               }
        }
        stage('Static code analysis') {
            environment {
                SONAR_URL = "http://184.73.24.30:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "ultimate-cicd:${BUILD_NUMBER}"
                // DOCKERFILE_LOCATION = "spring-boot-app/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('dockerhub')
            }
            steps {
                script {
                    sh "cd spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Image update') {
            environment {
                GIT_REPO_NAME = "CompleteCICD"
                GIT_USER = "Praveenkarthick28"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'jenkins token')]) {
                    sh """
                        git config user.email "karthikjeeva619@gmail.com"
                        git config user.name "praveenkarthick28"
                        BUILD_NUMBER=\${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/\${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                        git add spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version \${BUILD_NUMBER}"
                        git push https://github.com/\${GIT_USER}/\${GIT_REPO_NAME} HEAD:main
                    """
                }
            }
        }
    }
}
