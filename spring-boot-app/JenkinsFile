pipeline {
    agent any
    stages {
        stage('Checkout code') {
            steps {
                echo 'Passed' // Placeholder for actual checkout logic
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/Praveenkarthick28/CompleteCICD.git']]])
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "karthickdocker28/ultimate-cicd:${BUILD_NUMBER}"
                DOCKERFILE_LOCATION = "spring-boot-app/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('dockerhub')
            }
            steps {
                script {
                    sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} --platform linux/amd64 .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "dockerhub") {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('Image update') {
            environment {
                GIT_REPO_NAME = "CompleteCICD"
                GIT_USER = "Praveenkarthick28"
            }
            steps {
                sh """
                    git config --global user.email "karthikjeeva619@gmail.com"
                    git config --global user.name "praveen"
                    BUILD_NUMBER=\${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/\${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version \${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER}/${GIT_REPO_NAME} HEAD:main
                """
            }
        }
    }
}
